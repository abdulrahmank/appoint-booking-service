<html>
    <head>
        <style>
            .appointment-block {
                display: inline-block;
                width: 150px;
                height: 100px;
                padding: 5px;
                margin: 5px;
            }
            .un_available {background-color: grey;}
            .available {background-color: green;}
            .booked {background-color: red;}
            .start-time:before{
                content: "Start time: ";
                font-weight: bold;
            }
            .end-time:before{
                content: "End time: ";
                font-weight: bold;
            }
            button.available {
                visibility: hidden;
            }
        </style>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
        <script src="https://www.gstatic.com/firebasejs/4.13.0/firebase-app.js"></script>
        <script src="https://www.gstatic.com/firebasejs/4.13.0/firebase-messaging.js"></script>
        <script>
            firebase.initializeApp({
                'messagingSenderId': '<%= process.env.FCM_SERNDER_ID %>'
            })
            const messaging = firebase.messaging();
            function initFirebaseMessagingRegistration() {
                messaging
                    .requestPermission()
                    .then(function () {
                        console.log("Got notification permission");
                        return messaging.getToken();
                    })
                    .then(function (token) {
                        // print the token on the HTML page
                        tokenElement.innerHTML = "Token is " + token;
                    })
                    .catch(function (err) {
                        errorElement.innerHTML = "Error: " + err;
                        console.log("Didn't get notification permission", err);
                    });
            }
            messaging.onMessage(function (payload) {
                console.log("Message received. ", JSON.stringify(payload));
            });
            messaging.onTokenRefresh(function () {
                messaging.getToken()
                    .then(function (refreshedToken) {
                        console.log('Token refreshed.');
                    }).catch(function (err) {
                        console.log('Unable to retrieve refreshed token ', err);
                    });
            });
            $(document).ready(function() {
                initFirebaseMessagingRegistration();
            });
            $(function() {
                $('.make-available').click(function(event) {
                    var target = $(event.target);
                    if (!target.hasClass('appointment-block')) {
                        target = $(target.parent('.appointment-block'));
                    }
                    if (target.hasClass('available')) {
                        alert('Slot already made available for booking!');
                        return
                    }
                    const startTime = $(target.children('.start-time').first()).text();
                    const endTime = $(target.children('.end-time').first()).text();
                    $.post("/api/v1/providers/<%=provider.id%>/slots", {startTime, endTime}, function(xhr, result) {
                        if (result == 'success') {
                            target.removeClass('un_available').addClass('available');
                            target.children('.make-available').removeClass('un_available').addClass('available');
                        }
                    });
                });
            })
        </script>
    </head>
    <body>
        <div> <b> Name: </b> <%= provider.name %> </div>
        <div> <b> Services: </b> <%= provider.services.join(', ') %> </div>
        <div> <b> Location: </b> <%= provider.location %> </div>

        <% slots.forEach( (slot) => {%>

            <div class='appointment-block <%= slot.status %>'>
                <div class='start-time'><%= slot.startTime %></div>
                <div class='end-time'><%= slot.endTime %></div>
                <button class='make-available <%= slot.status %>'>Make available</button>
            </div>

        <% }); %>
    </body>
</html>